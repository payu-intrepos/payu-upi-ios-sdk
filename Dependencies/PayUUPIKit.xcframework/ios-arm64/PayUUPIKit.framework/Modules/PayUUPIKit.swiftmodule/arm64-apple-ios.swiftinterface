// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name PayUUPIKit
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import DeveloperToolsSupport
import Foundation
import PayUCommonUI
import PayULoggerKit
import PayUParamsKit
import PayUUPICoreKit
@_exported import PayUUPIKit
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc public enum PayUCollectScreenType : Swift.Int {
  case upi
  case gpayFallback
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor @preconcurrency public class PayCollectPaymentVC : UIKit.UIViewController {
  @objc @_Concurrency.MainActor @preconcurrency public var availablePaymentOptions: PayUUPICoreKit.PayUUPIPaymentOptions?
  @objc @_Concurrency.MainActor @preconcurrency public var screenType: PayUUPIKit.PayUCollectScreenType
  @objc @_Concurrency.MainActor @preconcurrency public var paymentParams: PayUParamsKit.PayUPaymentParam?
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @objc deinit
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension PayUUPIKit.PayCollectPaymentVC : UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
}
@objc @_inheritsConvenienceInitializers @objcMembers public class PayUUPI : ObjectiveC.NSObject {
  @objc public class func getCollectPaymentVC() -> PayUUPIKit.PayCollectPaymentVC
  @objc override dynamic public init()
  @objc deinit
}
extension PayUUPIKit.PayUCollectScreenType : Swift.Equatable {}
extension PayUUPIKit.PayUCollectScreenType : Swift.Hashable {}
extension PayUUPIKit.PayUCollectScreenType : Swift.RawRepresentable {}
